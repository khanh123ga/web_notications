"""Initial migration.

Revision ID: f0c4d899a885
Revises: 6f66781a6704
Create Date: 2024-12-13 12:30:51.518644

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f0c4d899a885'
down_revision = '6f66781a6704'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.drop_column('description')

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('file')
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('user_notification', schema=None) as batch_op:
        batch_op.drop_column('seen')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seen', sa.BOOLEAN(), nullable=True))

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('file', sa.VARCHAR(length=120), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('content',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.drop_column('user_id')

    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(length=200), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)

    # ### end Alembic commands ###
